// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tarefas.Infra.Persistence.EF;

namespace Tarefas.Infra.Migrations
{
    [DbContext(typeof(TarefasContext))]
    [Migration("20180725012829_IncluirEndereço")]
    partial class IncluirEndereço
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tarefas.Domain.Entities.ListaDeTarefas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("IdUsuario");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ListaDeTarefas");
                });

            modelBuilder.Entity("Tarefas.Domain.Entities.Tarefa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataConclusao")
                        .HasColumnName("DataConclusao")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnName("DataInicio")
                        .HasColumnType("Date");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid?>("IdListaDeTarefa");

                    b.Property<Guid?>("IdUsuario");

                    b.Property<int>("Status");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IdListaDeTarefa");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Tarefa");
                });

            modelBuilder.Entity("Tarefas.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Tarefas.Domain.Entities.ListaDeTarefas", b =>
                {
                    b.HasOne("Tarefas.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");
                });

            modelBuilder.Entity("Tarefas.Domain.Entities.Tarefa", b =>
                {
                    b.HasOne("Tarefas.Domain.Entities.ListaDeTarefas", "ListaDeTarefas")
                        .WithMany()
                        .HasForeignKey("IdListaDeTarefa");

                    b.HasOne("Tarefas.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");
                });

            modelBuilder.Entity("Tarefas.Domain.Entities.Usuario", b =>
                {
                    b.OwnsOne("Tarefas.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasMaxLength(200);

                            b1.ToTable("Usuario");

                            b1.HasOne("Tarefas.Domain.Entities.Usuario")
                                .WithOne("Email")
                                .HasForeignKey("Tarefas.Domain.ValueObjects.Email", "UsuarioId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Tarefas.Domain.ValueObjects.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId");

                            b1.Property<string>("Bairro")
                                .HasColumnName("Bairoo")
                                .HasMaxLength(200);

                            b1.Property<string>("Cep")
                                .HasColumnName("Cep")
                                .HasMaxLength(200);

                            b1.Property<string>("Cidade")
                                .HasColumnName("Cidade")
                                .HasMaxLength(300);

                            b1.Property<string>("Estado")
                                .HasColumnName("Estado")
                                .HasMaxLength(300);

                            b1.Property<string>("Logradouro")
                                .HasColumnName("Logradouro")
                                .HasMaxLength(400);

                            b1.Property<string>("NumeroResid")
                                .HasColumnName("Numero_Residencia");

                            b1.Property<string>("Pais")
                                .HasColumnName("Pais")
                                .HasMaxLength(100);

                            b1.ToTable("Usuario");

                            b1.HasOne("Tarefas.Domain.Entities.Usuario")
                                .WithOne("Endereco")
                                .HasForeignKey("Tarefas.Domain.ValueObjects.Endereco", "UsuarioId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Tarefas.Domain.ValueObjects.Nome", "Nome", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId");

                            b1.Property<string>("PrimeiroNome")
                                .IsRequired()
                                .HasColumnName("PrimeiroNome")
                                .HasMaxLength(50);

                            b1.Property<string>("UltimoNome")
                                .IsRequired()
                                .HasColumnName("UltimoNome")
                                .HasMaxLength(50);

                            b1.ToTable("Usuario");

                            b1.HasOne("Tarefas.Domain.Entities.Usuario")
                                .WithOne("Nome")
                                .HasForeignKey("Tarefas.Domain.ValueObjects.Nome", "UsuarioId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
